.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "" "" "" "" ""
.hy
.PP
\&.TH PRINTF 3 \[lq]March 2025\[rq] \[lq]Holberton School\[rq]
\[lq]Library Functions Manual\[rq] .SH NAME printf - formatted output
conversion
.PP
\&.SH SYNOPSIS .B #include \[lq]main.h\[rq] .BI \[lq]int _printf(const
char *format, \&...);\[rq]
.PP
\&.SH DESCRIPTION The .B _printf function produces output according to a
\&.I format string.
The format string is composed of zero or more directives: ordinary
characters (which are copied to the output) and conversion
specifications (which specify how subsequent arguments are formatted and
printed).
.PP
A conversion specification begins with a .B % and is followed by a
character that determines the format.
The supported format specifiers are:
.PP
\&.TP .B %c Prints a single character.
\&.TP .B %s Prints a string of characters.
\&.TP .B %d, %i Prints a signed decimal integer.
\&.TP .B %% Prints a literal % character.
.PP
\&.SH RETURN VALUE The function returns the number of characters printed
(excluding the null byte used to end output strings).
If an error occurs, it returns -1.
.PP
\&.SH EXAMPLES .nf .B #include \[lq]main.h\[rq] .B #include <stdio.h>
.PP
\&.B int main(void) { _printf(\[lq]Hello, %s!\[rq], \[lq]world\[rq]);
_printf(\[lq]Character: %c, Number: %d\[rq], `A', 42); return (0); } .fi
.PP
\&.SH NOTES The .B _printf function does not support all the features of
the standard .B printf function in the C standard library.
It is a custom implementation with limited format specifiers.
.PP
\&.SH SEE ALSO .BR printf (3), .BR sprintf (3), .BR snprintf (3)
.PP
\&.SH AUTHORS Arnaud Tilawat Cl√©ment Gibot
